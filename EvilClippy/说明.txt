用于创建恶意MS Office文档的跨平台助手。可以隐藏VBA宏，踩踏VBA代码（通过P代码）并混淆宏分析工具。在Linux，OSX和Windows上运行。
项目地址：https://github.com/outflanknl/EvilClippy


这个工具是在我们的BlackHat亚洲演讲（2019年3月28日）期间发布的。视频录制将在90天内在线。

邪恶的Clippy
用于创建恶意MS Office文档的跨平台助手。可以隐藏VBA宏，踩踏VBA代码（通过P代码）并混淆宏分析工具。在Linux，OSX和Windows上运行。

如果您是这个工具的新手，您可能需要先阅读我们关于Evil Clippy的博客文章：https： //outflank.nl/blog/2019/05/05/evil-clippy-ms-office-maldoc-assistant /

目前的功能
从GUI编辑器隐藏VBA宏
VBA st脚（P码滥用）
傻瓜分析工具
通过HTTP提供VBA stomped模板
设置/删除VBA项目锁定/不可见保护
如果您不知道所有这些是什么，请首先查看以下资源：

我们在Derbycon 2018举办的MS Office Magic Show演讲
VBA由沃尔玛安全团队踩踏资源
Bontchev博士的Pcodedmp
这有效吗？
在撰写本文时，该工具能够获得默认的Cobalt Strike宏，以绕过所有主要的防病毒产品和大多数maldoc分析工具（通过将VBA stomping与随机模块名称结合使用）。

技术
Evil Clippy使用OpenMCDF库来操作MS Office复合文件二进制格式（CFBF）文件，并且此处滥用MS-OVBA规范和功能。它重用来自Kavod.VBA.Compression的代码来实现dir和模块流中使用的压缩算法（有关相关规范，请参阅MS-OVBA）。

Evil Clippy使用Mono C＃编译器完美编译，并已在Linux，OSX和Windows上进行过测试。

汇编
可以在“版本”下找到跨平台编译的二进制文件。

OSX和Linux 确保安装了Mono。然后从命令行执行以下命令：

mcs /reference:OpenMcdf.dll,System.IO.Compression.FileSystem.dll /out:EvilClippy.exe *.cs

现在从命令行运行Evil Clippy：

mono EvilClippy.exe -h

Windows 确保安装了Visual Studio。然后从Visual Studio开发人员命令提示符处执行以下命令：

csc /reference:OpenMcdf.dll,System.IO.Compression.FileSystem.dll /out:EvilClippy.exe *.cs

现在从命令行运行Evil Clippy：

EvilClippy.exe -h

用法示例
打印帮助

EvilClippy.exe -h

从GUI隐藏宏

从VBA GUI编辑器隐藏所有宏模块（默认的“ThisDocument”模块除外）。这是通过从项目流[MS-OVBA 2.3.1]中删除模块行来实现的。

EvilClippy.exe -g macrofile.doc

Stomp VBA（滥用P代码）

在所有模块中放置来自文本文件fakecode.vba的假VBA代码，同时保留P代码。这滥用了模块流的未记录特征[MS-OVBA 2.3.4.3]。请注意，VBA项目版本必须与主程序匹配才能执行P代码（请参阅下一个版本匹配示例）。

EvilClippy.exe -s fakecode.vba macrofile.doc

注意：VBA Stomping不适用于以Excel 97-2003工作簿（.xls）格式保存的文件

为VBA stomping设置目标Office版本

与上面相同，但现在明确针对x86上的Word 2016。这意味着x86上的Word 2016将执行P代码，而其他版本的Word将执行fakecode.vba中的代码。通过在_VBA_PROJECT流[MS-OVBA 2.3.4.1]中设置适当的版本字节来实现。

EvilClippy.exe -s fakecode.vba -t 2016x86 macrofile.doc

设置随机模块名称（傻瓜分析工具）

在目录流[MS-OVBA 2.3.4.2]中设置随机ASCII模块名称。这会滥用MODULESTREAMNAME记录中的歧义[MS-OVBA 2.3.4.2.3.2.3] - 大多数分析工具使用此处指定的ASCII模块名称，而MS Office使用Unicode变体。通过设置随机ASCII模块名称，大多数P代码和VBA分析工具会崩溃，而实际的P代码和VBA仍可在Word和Excel中正常运行。

EvilClippy.exe -r macrofile.doc

注意：已知这可以有效地欺骗pcodedmp和VirusTotal

通过HTTP提供VBA踩踏模板

执行VBA stomping后，通过HTTP端口8080 服务macrofile.dot。如果检索到此文件，它将自动匹配目标的Office版本（使用其HTTP标头，然后相应地设置_VBA_PROJECT字节）。

EvilClippy.exe -s fakecode.vba -w 8080 macrofile.dot

注意：您服务的文件必须是模板（.dot而不是.doc）。您可以通过URL（Word中的开发人员工具栏中的.dot扩展名不需要！）设置模板。另外，fakecode.vba必须为模板中的宏设置一个VB_Base属性（这意味着你的facecode.vba必须以一行开头，如属性VB_Base =“0 {00020906-0000-0000-C000-000000000046}”） 。

设置/删除VBA项目锁定/不可见保护

要设置Locked / Unviewable属性，请使用'-u'选项：

EvilClippy.exe -u macrofile.doc

要删除Locked / Unviewable属性，请使用'-uu'选项：

EvilClippy.exe -uu macrofile.doc

注意：您也可以删除未使用EvilClippy锁定的文件上的Locked / Unviewable属性。

限制
开发用于Microsoft Word和Excel文档操作。

如上所述，VBA stomping对Excel 97-2003工作簿（.xls）格式无效。

作者
Stan Hegt（@StanHacked）/ Outflank

Carrie Robberts（@OrOneEqualsOne / Walmart）的重要贡献。

特别感谢Nick Landers（@monoxgas / Silent Break Security）将我指向OpenMCDF。













